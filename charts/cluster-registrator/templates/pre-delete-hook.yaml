apiVersion: batch/v1
kind: Job
metadata:
  name: pre-delete-job
  namespace: {{ .Values.namespace }}
  annotations:
    "helm.sh/hook": pre-delete
  labels:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: nirmata-cluster-registrator
      {{  if and .Values.imagePullSecret.registryName .Values.imagePullSecret.userName .Values.imagePullSecret.password }}
      imagePullSecrets:
      - name: cluster-registrator-imagepullsecret
      {{ end }}
      containers:
      - name: delete-items
        image: {{ .Values.hooks.image.registry | default "ghcr.io" }}/{{ .Values.hooks.image.repository | default "nirmata" }}/kubectl:{{ .Values.hooks.image.tag }}
        command: ["sh", "-c"]
        args:
        - |
          #!/bin/bash
          set -e
          # Fetch the ConfigMap and extract items data
          items=`kubectl get configmap items-created -n nirmata -o custom-columns=DATA:.data --no-headers | sed 's/map\[//;s/\]//;s/ /\n/g' | sed 's/[:=]/ /')`
          # Iterate through the items and delete them
          echo -n "$items" | while read -r line; do
            kind=$(echo $line | awk '{print $1}')
            names=$(echo $line | awk '{print $2}' | sed -e 's/,/ /g')
            for name in `echo $names`; do
              echo "5"
              kubectl delete $kind $name -n nirmata || true
            done
          done
          
          # Delete the ConfigMap itself
          kubectl delete configmap items-created -n nirmata || true