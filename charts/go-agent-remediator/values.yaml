replicaCount: 1

image:
  repository: ghcr.io/nirmata/go-agent-remediator
  pullPolicy: IfNotPresent
  tag: "v0.0.3"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}
podSecurityContext: {}

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

nodeSelector: {}
tolerations: []
affinity: {}

# Operator Configuration
operator:
  metricsPort: 8443
  healthProbePort: 8081
  leaderElection: true
  
  # Environment configuration
  environment:
    localCluster: false
    argoCD:
      hub: true

  # Target configuration
  target:
    clusterNames: []
    clusterServerUrls: []  # Optional
    argoAppSelector: {}
  # Example configurations for flexible Argo application targeting:
  # 
  # target:
  #   clusterNames:
  #     - cluster1
  #     - cluster2
  #     - cluster3
  #   clusterServerUrls:  # Optional cluster server URLs for validation
  #     - "https://cluster1.example.com"
  #     - "https://cluster2.example.com"
  #   argoAppSelector:
  #     # Option 1: Select specific applications by name
  #     names:
  #       - web-frontend
  #       - api-backend
  #       - database-service
  #     
  #     # Option 2: Select applications by labels
  #     labelSelector:
  #       matchLabels:
  #         team: platform
  #         environment: production
  #       matchExpressions:
  #         - key: criticality
  #           operator: In
  #           values: ["high", "critical"]
  #     
  #     # Option 3: Select all applications (wildcard)
  #     allApps: true

  # Remediation configuration
  remediation:
    triggers: []
    # - schedule:
    #     crontab: "0 * * * *"
    
    filters:
      policySelector:
        matchSeverity:
          - high
          - critical
    
    actions: []
    # - type: github-pr
    #   toolRef:
    #     name: github-tool
    #     namespace: default
    
    provider:
      providerType: bedrock
      bedrockModel: ""

# Tool configurations
toolConfigs: []
# - name: github-tool
#   type: github
#   org: your-org
#   credentials:
#     secretRef:
#       name: github-secret
#       key: token
#   defaults:
#     repoUrl: ""
#     baseBranch: main
#     targetPath: ""
#     prBranchPrefix: fix/
#     commitAuthor:
#       name: Bot
#       email: bot@example.com
#     prTitleTemplate: "fix: {{.Policy}} violation in {{.Resource}}"
#     commitMessageTemplate: "fix: Remediate {{.Policy}} violation in {{.Resource}}" 