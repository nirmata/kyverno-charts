replicaCount: 1

image:
  repository: ghcr.io/nirmata/go-agent-remediator
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""


resources:
  limits:
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

nodeSelector: {}
tolerations: []
affinity: {}

# LLM provider configuration for creating an LLMConfig CR
llm:
  enabled: true
  provider: bedrock  # Options: bedrock, azure-openai
  # For Bedrock
  model: ""
  region: ""
  # For Azure OpenAI
  endpoint: ""
  deploymentName: ""
  # Secret configuration (for both providers)
  secretName: ""
  # TODO: this is not required, but we need to set it to something. Make the key optional in the secretRef.
  secretKey: "aws_access_key_id"

# ToolConfig for GitHub (used by CreateGithubPR)
tool:
  enabled: true
  name: github-tool
  type: github
  
  # Authentication method configuration
  # Choose between "pat" (Personal Access Token) or "app" (GitHub App)
  credentials:
    method: app  # Options: "pat" or "app" (recommended: "app" for better security)
    
    app:
      appId: ""  # Set this to your GitHub App ID
      # installationId: ""  # Optional: set if you want to specify installation ID
      privateKeySecret:
        name: "github-app-private-key"
        key: "private-key.pem"
    
    # PAT configuration (used when method: pat)
    pat:
      secret:
        name: "github-pat-token"
        key: "token"
  
  defaults:
    prBranchPrefix: remediation-
    prTitleTemplate: "[Auto-Remediation] Fix policy violations"
    commitMessageTemplate: "Auto-fix: Remediate policy violations"

# Remediator CR
remediator:
  enabled: true
  name: remediator-agent
  environment:
    localCluster: false
    argoCD:
      hub: true
  target:
    clusterNames: []
    clusterServerUrls: []
    argoAppSelector:
      allApps: true
  remediation:
    schedule: "0 */6 * * *"
    actions:
      - type: CreateGithubPR
        toolRefName: github-tool
