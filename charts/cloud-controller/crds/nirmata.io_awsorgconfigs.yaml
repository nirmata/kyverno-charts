---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: awsorgconfigs.nirmata.io
spec:
  group: nirmata.io
  names:
    kind: AWSOrgConfig
    listKind: AWSOrgConfigList
    plural: awsorgconfigs
    singular: awsorgconfig
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AWSOrgConfig is the configuration for an AWS Organization.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AWS Organization configuration spec.
            properties:
              customAssumeRoleName:
                description: |-
                  CustomAssumeRoleName is the Assume Role Name created in all the child accounts.
                  This role is used to fetch resources configured in the CR.
                type: string
              excludedOrgsAndAccounts:
                description: |-
                  ExcludedOrgsAndAccounts is a list of organizations and accounts to exclude from scanning.
                  This field is optional.
                items:
                  type: string
                type: array
              orgID:
                description: OrgID is the identifier for the AWS Organization to scan.
                type: string
              orgName:
                description: OrgName is the name of the AWS Organization to scan.
                type: string
              regions:
                description: Regions is a list of AWS regions to fetch the cloud resources
                  from.
                items:
                  type: string
                type: array
              roleARN:
                description: RoleARN is the ARN of the IAM role in the management
                  account to assume to fetch child OUs and Accounts
                type: string
              scanInterval:
                description: |-
                  ScanInterval defines the interval in duration at which to scan the cloud resources.
                  The duration is a sequence of decimal numbers, each with optional fraction and a unit suffix,
                  such as "300ms", "1.5h" or "2h45m". Valid time units are "ns", "us" (or "Âµs"), "ms", "s", "m", "h".
                format: duration
                type: string
              services:
                description: Services is a list of AWS services that will be fetched.
                items:
                  type: string
                type: array
            required:
            - customAssumeRoleName
            - orgID
            - orgName
            - regions
            - roleARN
            - scanInterval
            - services
            type: object
          status:
            description: AWS Organization configuration status.
            properties:
              conditions:
                description: Conditions represents the latest available observations
                  of an object's state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              lastSyncStatus:
                description: LastSyncStatus indicates the status of the last sync
                  operation.
                type: string
              lastSyncTime:
                description: LastSyncTime is the time when the last successful scan
                  occurred.
                format: date-time
                type: string
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
