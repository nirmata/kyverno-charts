{{- if .Values.admissionController.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "cloud-control.admission-controller.name" . }}
  namespace: {{ template "cloud-control.namespace" . }}
  labels:
    control-plane: controller-manager
  {{- include "cloud-control.admission-controller.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.admissionController.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "cloud-control.admission-controller.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
      {{- include "cloud-control.admission-controller.labels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args: {{- toYaml .Values.admissionController.args | nindent 8 }}
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ADMISSION_CONTROLLER_SVC
          value: {{ include "cloud-control.admission-controller.serviceName" . }}
        image: {{ .Values.admissionController.image.registry }}/{{ .Values.admissionController.image.repository }}:{{ .Values.admissionController.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.admissionController.image.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8443
          name: http-proxy-svc
        - containerPort: 9443
          name: webhook
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.admissionController.resources | nindent 10 }}
        securityContext: {{- toYaml .Values.admissionController.securityContext | nindent 10 }}
        volumeMounts:
        - name: webhook-certs
          mountPath: /tmp/k8s-webhook-server/serving-certs
          readOnly: true
      {{- if .Values.admissionController.imagePullSecrets }}
      imagePullSecrets:
        {{ range $name, $secret := .Values.admissionController.imagePullSecrets }}
        - name: {{ include "cloud-control.admission-controller.name" $ }}-{{ $name }}
        {{- end }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: {{ template "cloud-control.admission-controller.serviceAccountName" . }}
      terminationGracePeriodSeconds: 10
      volumes:
      - name: webhook-certs
        secret:
          optional: true
          secretName: {{ include "cloud-control.admission-controller.serviceName" . }}.{{ template "cloud-control.namespace" . }}.svc.tls-pair
{{- end }}
