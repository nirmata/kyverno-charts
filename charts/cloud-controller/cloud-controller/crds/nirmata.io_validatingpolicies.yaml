---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: validatingpolicies.nirmata.io
spec:
  group: nirmata.io
  names:
    kind: ValidatingPolicy
    listKind: ValidatingPolicyList
    plural: validatingpolicies
    singular: validatingpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: 'Specifies if scan is enabled (default: true)'
      jsonPath: .spec.scan
      name: Scan
      priority: 1
      type: boolean
    - description: 'Specifies if admission control is enabled (default: true)'
      jsonPath: .spec.admission
      name: Admission
      priority: 1
      type: boolean
    - description: 'Failure action (default: Audit)'
      jsonPath: .spec.failureAction
      name: FailureAction
      priority: 1
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ValidatingPolicy is the resource that contains the policy definition.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Policy spec.
            properties:
              admission:
                default: true
                description: |-
                  Admission controls if rules are applied during admission.
                  Optional. Default value is "true".
                type: boolean
              events:
                description: |-
                  Events controls if rules are applied to events.
                  Optional. Default value is "false".
                type: boolean
              failureAction:
                default: Audit
                description: |-
                  FailureAction defines if a validation policy rule violation should block
                  the cloud admission request (Enforce), or allow (Audit) the request
                  and report as fail in a policy report. Optional.
                  Allowed values are Audit or Enforce.
                enum:
                - Audit
                - Enforce
                type: string
              matchConditions:
                description: |-
                  MatchConditions is a list of conditions that must be met for a request to be validated.
                  There are a maximum of 64 match conditions allowed.
                items:
                  description: MatchCondition represents a condition which must by
                    fulfilled for a request to be sent to a webhook.
                  properties:
                    expression:
                      description: |-
                        Expression represents the expression which will be evaluated by CEL. Must evaluate to bool.
                        CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:


                        'object' - The object from the incoming request. The value is null for DELETE requests.
                        'oldObject' - The existing object. The value is null for CREATE requests.
                        'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest).
                        'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.
                          See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz
                        'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the
                          request resource.
                        Documentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/


                        Required.
                      type: string
                    name:
                      description: |-
                        Name is an identifier for this match condition, used for strategic merging of MatchConditions,
                        as well as providing an identifier for logging purposes. A good name should be descriptive of
                        the associated expression.
                        Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and
                        must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or
                        '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an
                        optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')


                        Required.
                      type: string
                  required:
                  - expression
                  - name
                  type: object
                type: array
              scan:
                default: true
                description: |-
                  Scan controls if rules are applied during cloud scanning.
                  Optional. Default value is "true".
                type: boolean
              validationActions:
                description: ValidationAction specifies the action to be taken when
                  the matched resource violates the policy.
                items:
                  description: ValidationAction specifies a policy enforcement action.
                  type: string
                type: array
              validations:
                description: Validations contain CEL expressions which is used to
                  apply the validation.
                items:
                  description: Validation specifies the CEL expression which is used
                    to apply the validation.
                  properties:
                    expression:
                      description: "Expression represents the expression which will
                        be evaluated by CEL.\nref: https://github.com/google/cel-spec\nCEL
                        expressions have access to the contents of the API request/response,
                        organized into CEL variables as well as some other useful
                        variables:\n\n\n- 'object' - The object from the incoming
                        request. The value is null for DELETE requests.\n- 'oldObject'
                        - The existing object. The value is null for CREATE requests.\n-
                        'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)).\n-
                        'params' - Parameter resource referred to by the policy binding
                        being evaluated. Only populated if the policy has a ParamKind.\n-
                        'namespaceObject' - The namespace object that the incoming
                        object belongs to. The value is null for cluster-scoped resources.\n-
                        'variables' - Map of composited variables, from its name to
                        its lazily evaluated value.\n  For example, a variable named
                        'foo' can be accessed as 'variables.foo'.\n- 'authorizer'
                        - A CEL Authorizer. May be used to perform authorization checks
                        for the principal (user or service account) of the request.\n
                        \ See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n-
                        'authorizer.requestResource' - A CEL ResourceCheck constructed
                        from the 'authorizer' and configured with the\n  request resource.\n\n\nThe
                        `apiVersion`, `kind`, `metadata.name` and `metadata.generateName`
                        are always accessible from the root of the\nobject. No other
                        metadata properties are accessible.\n\n\nOnly property names
                        of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible.\nAccessible
                        property names are escaped according to the following rules
                        when accessed in the expression:\n- '__' escapes to '__underscores__'\n-
                        '.' escapes to '__dot__'\n- '-' escapes to '__dash__'\n- '/'
                        escapes to '__slash__'\n- Property names that exactly match
                        a CEL RESERVED keyword escape to '__{keyword}__'. The keywords
                        are:\n\t  \"true\", \"false\", \"null\", \"in\", \"as\", \"break\",
                        \"const\", \"continue\", \"else\", \"for\", \"function\",
                        \"if\",\n\t  \"import\", \"let\", \"loop\", \"package\", \"namespace\",
                        \"return\".\nExamples:\n  - Expression accessing a property
                        named \"namespace\": {\"Expression\": \"object.__namespace__
                        > 0\"}\n  - Expression accessing a property named \"x-prop\":
                        {\"Expression\": \"object.x__dash__prop > 0\"}\n  - Expression
                        accessing a property named \"redact__d\": {\"Expression\":
                        \"object.redact__underscores__d > 0\"}\n\n\nEquality on arrays
                        with list type of 'set' or 'map' ignores element order, i.e.
                        [1, 2] == [2, 1].\nConcatenation on arrays with x-kubernetes-list-type
                        use the semantics of the list type:\n  - 'set': `X + Y` performs
                        a union where the array positions of all elements in `X` are
                        preserved and\n    non-intersecting elements in `Y` are appended,
                        retaining their partial order.\n  - 'map': `X + Y` performs
                        a merge where the array positions of all keys in `X` are preserved
                        but the values\n    are overwritten by values in `Y` when
                        the key sets of `X` and `Y` intersect. Elements in `Y` with\n
                        \   non-intersecting keys are appended, retaining their partial
                        order.\nRequired."
                      type: string
                    message:
                      description: |-
                        Message represents the message displayed when validation fails. The message is required if the Expression contains
                        line breaks. The message must not contain line breaks.
                        If unset, the message is "failed rule: {Rule}".
                        e.g. "must be a URL with the host matching spec.host"
                        If the Expression contains line breaks. Message is required.
                        The message must not contain line breaks.
                        If unset, the message is "failed Expression: {Expression}".
                      type: string
                    messageExpression:
                      description: |-
                        messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails.
                        Since messageExpression is used as a failure message, it must evaluate to a string.
                        If both message and messageExpression are present on a validation, then messageExpression will be used if validation fails.
                        If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced
                        as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string
                        that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and
                        the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged.
                        messageExpression has access to all the same variables as the `expression` except for 'authorizer' and 'authorizer.requestResource'.
                        Example:
                        "object.x must be less than max ("+string(params.max)+")"
                      type: string
                    reason:
                      description: |-
                        Reason represents a machine-readable description of why this validation failed.
                        If this is the first validation in the list to fail, this reason, as well as the
                        corresponding HTTP response code, are used in the
                        HTTP response to the client.
                        The currently supported reasons are: "Unauthorized", "Forbidden", "Invalid", "RequestEntityTooLarge".
                        If not set, StatusReasonInvalid is used in the response to the client.
                      type: string
                  required:
                  - expression
                  type: object
                type: array
              variables:
                description: |-
                  Variables contain definitions of variables that can be used in composition of other expressions.
                  Each variable is defined as a named CEL expression.
                  The variables defined here will be available under `variables` in other expressions of the policy
                items:
                  description: Variable is the definition of a variable that is used
                    for composition. A variable is defined as a named expression.
                  properties:
                    expression:
                      description: |-
                        Expression is the expression that will be evaluated as the value of the variable.
                        The CEL expression has access to the same identifiers as the CEL expressions in Validation.
                      type: string
                    name:
                      description: |-
                        Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables.
                        The variable can be accessed in other expressions through `variables`
                        For example, if name is "foo", the variable will be available as `variables.foo`
                      type: string
                  required:
                  - expression
                  - name
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
            required:
            - validations
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
