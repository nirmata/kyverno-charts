{{- if .Values.enablePreDeleteHook }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "enterprise-kyverno.fullname" . }}-operator-cleanup
  namespace: {{ template "enterprise-kyverno.namespace" . }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": hook-succeeded
  {{- if .Values.globalAnnotations }}
    {{- toYaml .Values.globalAnnotations| nindent 4 }}
  {{- end }}
  labels:
    app: {{ template "enterprise-kyverno.name" . }}-operator
{{ include "enterprise-kyverno.labels" . | indent 4 }}
spec:
  template:
    metadata:
      name: {{ template "enterprise-kyverno.fullname" . }}-operator-cleanup
      labels:
        app: {{ template "enterprise-kyverno.name" . }}-operator
{{ include "enterprise-kyverno.labels" . | indent 8 }}
    spec:
      imagePullSecrets: 
      - name: {{ .Values.image.pullSecrets.name }}
      serviceAccountName: {{ template "enterprise-kyverno.rbac.serviceAccountName" . }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        {{- if .Values.podSecurityContext -}}
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
        {{- end }}
      containers:
        - name: kubectl
          image: {{ .Values.predeletehookimage | default "ghcr.io/nirmata/kubectl:1.29.1" }}
          imagePullPolicy: IfNotPresent
          command:
          - sh
          - -c
          - >
              for i in {{ include "enterprise-kyverno.policysetsStr" . }}; 
              do 
                kubectl -n {{ include "enterprise-kyverno.namespace" . }} delete PolicySet $i;
              done;
              {{- if .Values.awsAdapter.createCR }}
              kubectl -n {{ include "enterprise-kyverno.namespace" . }} delete kyvernoadapters aws-adapter-config;
              {{- end }}
              {{- if .Values.imageScanAdapter.createCR }}
              kubectl -n {{ include "enterprise-kyverno.namespace" . }} delete kyvernoadapters image-scan-adapter-config;
              {{- end }}
              {{- if .Values.cisAdapter.createCR }}
              kubectl -n {{ include "enterprise-kyverno.namespace" . }} delete kyvernoadapters cis-adapter-config;
              {{- end }}
              {{- if .Values.kyverno.createCR }}
              kubectl -n {{ include "enterprise-kyverno.namespace" . }} delete kyvernoconfigs kyverno;
              sleep 10;
              {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            limits:
              memory: 128Mi
      restartPolicy: OnFailure
{{- end }}
