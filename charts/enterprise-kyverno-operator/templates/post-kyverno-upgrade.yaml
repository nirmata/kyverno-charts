{{- if .Values.kyverno.helm.policyReportsCleanup.enabled -}}
  {{- if not .Values.kyverno.templating.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "kyverno.fullname" . }}-hook-post-upgrade
  namespace: {{ template "kyverno.namespace" . }}
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 2
  template:
    spec:
      serviceAccount: {{ template "kyverno.admission-controller.serviceAccountName" . }}
      {{- with .Values.kyverno.helm.policyReportsCleanup.podSecurityContext }}
      securityContext:
        {{- tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      restartPolicy: Never
      containers:
        - name: kubectl
          image: {{ (include "kyverno.image" (dict "globalRegistry" ((.Values.kyverno.global).image).registry "image" .Values.kyverno.helm.policyReportsCleanup.image "defaultTag" (default .Chart.AppVersion .Values.kyverno.helm.policyReportsCleanup.image.tag))) | quote }}
          imagePullPolicy: {{ .Values.kyverno.helm.policyReportsCleanup.image.pullPolicy }}
          command:
          - sh
          - -c
          - |
            NAMESPACES=$(kubectl get namespaces --no-headers=true -o custom-columns=:metadata.name)

            for ns in ${NAMESPACES[@]};
            do
              COUNT=$(kubectl get policyreports.wgpolicyk8s.io -n $ns --no-headers=true -o custom-columns=:metadata.name | wc -l)

              if [ $COUNT -gt 0 ]; then
                echo "deleting $COUNT policyreports in namespace $ns"
                kubectl delete -n $ns policyreports.wgpolicyk8s.io --selector='pol'
              else
                echo "no policyreports in namespace $ns"
              fi
            done

            COUNT=$(kubectl get clusterpolicyreports.wgpolicyk8s.io --no-headers=true -o custom-columns=:metadata.name | wc -l)
                    
            if [ $COUNT -gt 0 ]; then
              echo "deleting $COUNT clusterpolicyreports"
              kubectl delete clusterpolicyreports.wgpolicyk8s.io --selector='pol'
            else
              echo "no clusterpolicyreports"
            fi
          {{- with .Values.kyverno.helm.policyReportsCleanup.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
  {{- end -}}
{{- end -}}
