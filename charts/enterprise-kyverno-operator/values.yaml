# Default values for nirmata-kyverno.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

profile: "prod"

cloudPlatform: ""

namespace:

globalLabels: {}
globalAnnotations: {}
enablePreDeleteHook: true

replicaCount: 1

envVars: []

image:
  repository: ghcr.io/nirmata/nirmata-kyverno-operator
  # Defaults to chart appVersion
  tag:
  pullPolicy: IfNotPresent
  pullSecrets:
    registry: ghcr.io
    name: image-pull-secret
    create: false
    username:
    password:


rbac:
  create: true
  operatorHasAdminPerms: false
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

enableWebhook: true
kyvernoDeployment: kyverno-admission-controller
kyvernoNamespace: kyverno
enablePolicyset: false

preventPolicyTamper: true

# Whether certificate management is done by "cert-manager", "operator", "other"
certManager: operator

# set to true if secret is being provided for licenseManager, and set the name under helm.licenseManager.apiSecret/helm.licenseManager.licenseSecret
apiAndLicenseSecretExists: false

# Component configurations
kyverno:
  createCR: true
  kyverno:
    customLabels: {}
  nameOverride: "kyverno"
  fullnameOverride: "kyverno"
  namespace: kyverno

policies:
  chartRepoUsername:
  policySets: "[]"


# Items after this are general chart parameters. Set/Modify as per need.
nameOverride: ""
fullnameOverride: ""


podSecurityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault
  # fsGroup: 2000

securityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
    - CAP_NET_RAW

# -- Configmap storing custom CA certificate if any
customCAConfigMap:
# -- CA certificate data to be stored in a ConfigMap and mounted to the deployment
customCACert: ""
# -- Path containing ssl certs within the container. Used only if customCAConfigMap is used
systemCertPath: /etc/ssl/certs

service:
  port: 80

ingress: {}

resources:
  limits:
    memory: 256Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false

nodeSelector: {}

tolerations: []

affinity: {}

# CRDs configuration
crds:

  # -- Whether to have Helm install the Kyverno CRDs, if the CRDs are not installed by Helm, they must be added before policies can be created
  install: true

  groups:

    # -- Install CRDs in group `kyverno.io`
    kyverno:
      admissionreports: true
      backgroundscanreports: true
      cleanuppolicies: true
      clusteradmissionreports: true
      clusterbackgroundscanreports: true
      clustercleanuppolicies: true
      clusterpolicies: true
      globalcontextentries: true
      policies: true
      policyexceptions: true
      updaterequests: true

    # -- Install CRDs in group `reports.kyverno.io`
    reports:
      clusterephemeralreports: true
      ephemeralreports: true

    # -- Install CRDs in group `wgpolicyk8s.io`
    wgpolicyk8s:
      clusterpolicyreports: true
      policyreports: true

  # -- Additional CRDs annotations
  annotations: {}
    # argocd.argoproj.io/sync-options: Replace=true
    # strategy.spinnaker.io/replace: 'true'

  # -- Additional CRDs labels
  customLabels: {}

  migration:

    # -- Enable CRDs migration using helm post upgrade hook
    enabled: true

    # -- Resources to migrate
    resources:
    - admissionreports.kyverno.io
    - backgroundscanreports.kyverno.io
    - cleanuppolicies.kyverno.io
    - clusteradmissionreports.kyverno.io
    - clusterbackgroundscanreports.kyverno.io
    - clustercleanuppolicies.kyverno.io
    - clusterpolicies.kyverno.io
    - globalcontextentries.kyverno.io
    - policies.kyverno.io
    - policyexceptions.kyverno.io
    - updaterequests.kyverno.io

    image:
      # -- (string) Image registry
      registry: ghcr.io
      # -- (string) Image repository
      repository: nirmata/kyverno-cli
      # -- (string) Image tag
      # Defaults to appVersion in Chart.yaml if omitted
      tag: ~
      # -- (string) Image pull policy
      pullPolicy: IfNotPresent

    # -- Image pull secrets
    imagePullSecrets: []
    # - name: secretName

    # -- Security context for the pod
    podSecurityContext: {}

    # -- Node labels for pod assignment
    nodeSelector: {}

    # -- List of node taints to tolerate
    tolerations: []

    # -- Pod anti affinity constraints.
    podAntiAffinity: {}

    # -- Pod affinity constraints.
    podAffinity: {}

    # -- Pod labels.
    podLabels: {}

    # -- Pod annotations.
    podAnnotations: {}

    # -- Node affinity constraints.
    nodeAffinity: {}

    # -- Security context for the hook containers
    securityContext:
      runAsUser: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
        - ALL
      seccompProfile:
        type: RuntimeDefault
